{"version":3,"sources":["components/ChannelItem.tsx","components/ChannelList.tsx","components/ChannelPlayer.tsx","App.tsx","modules/Counter.tsx","serviceWorker.ts","index.tsx"],"names":["styled","button","Thumbnail","img","ChannelDetail","div","Title","Details","ChannelItemStyle","ChannelItem","props","channel","videoElementId","streamId","thumnbailElementId","hiddenPlayer","to","onClick","id","src","hidden","controls","width","height","text","details","html","escapeEl","document","createElement","innerHTML","textContent","unescapeHTML","replace","genre","length","channelDetail","name","ChannelStyle","ChannelList","channels","filter","type","map","item","index","key","ChannelPlayer","find","tip","contactUrl","listenerCount","relayCount","bitrate","flvPlayer","window","scrollTo","useEffect","videoElement","getElementById","console","log","url","flvjs","createPlayer","isLive","attachMediaElement","load","play","CounterActionType","Logo","App","useState","setChannels","a","fetch","credentials","res","lines","split","line","elements","fetchData","exact","path","render","match","params","initialState","count","counterReducer","state","action","ADD","amount","DECREMENT","INCREMENT","Boolean","location","hostname","store","createStore","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f6cff00b.chunk.js","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport Channel from '../Channel';\nimport { Link } from 'react-router-dom'\n\ndeclare var flvjs: any;\n\ntype Props = {\n    channel: Channel,\n}\n\nconst ChannelItem = (props: Props) => {\n    const {\n        channel,\n    } = props;\n\n    function unescapeHTML(html: string) {\n      var escapeEl = document.createElement('textarea');\n      escapeEl.innerHTML = html;\n      return escapeEl.textContent;\n    }\n\n    const channelDetail = (channel: Channel) => {\n        let text = '';\n        const details = unescapeHTML(channel.details.replace(/ - .*/, '')) || ''\n\n        if (channel.genre.length) {\n            text = channel.genre\n            if (details.length) {\n                text += ' - '\n            }\n        }\n        if (details.length) {\n            text += details\n        }\n        return text;\n    }\n\n    const videoElementId = `videoElement-${channel.streamId}`;\n    const thumnbailElementId = `thumnbailElement-${channel.streamId}`;\n    let flvPlayer: any = null;\n    let hiddenPlayer = true;\n    const onSelectChannel = () => {\n        return;\n        if (!flvPlayer) {\n            let thumnbailElement:any = document.getElementById(thumnbailElementId);\n            thumnbailElement.hidden = true;\n\n            let videoElement:any = document.getElementById(videoElementId);\n            videoElement.hidden = false;\n            const url = `http://peca.live:7144/stream/${channel.streamId}.flv?auth=JkVYNUxQTmVaTUEwWSdlMDouSWhDQnE7c1lZKCFyeXVY&tip=${channel.tip}`;\n            flvPlayer = flvjs.createPlayer({\n                type: 'flv',\n                isLive: true,\n                url: url\n            });\n            flvPlayer.attachMediaElement(videoElement);\n            flvPlayer.load();\n            flvPlayer.play();\n            hiddenPlayer = false;\n        }\n    };\n\n    return (\n        <Link to={`/channels/${channel.streamId}`}>\n            <ChannelItemStyle onClick={() => onSelectChannel()}>\n                <div>\n                    <Thumbnail id={thumnbailElementId} src=\"./live-chuu.png\" hidden={!hiddenPlayer} />\n                    <video id={videoElementId} controls width=\"347.5\" height=\"195.47\" hidden={hiddenPlayer}></video>\n                </div>\n                <ChannelDetail>\n                    <Title>\n                        {channelDetail(channel)}\n                    </Title>\n                    <Details>\n                        {channel.name}\n                    </Details>\n                </ChannelDetail>\n            </ChannelItemStyle>\n        </Link>\n    );\n};\n\nconst StyledButton = styled.button`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: palevioletred;\n  margin: 0 1em;\n  padding: 0.25em 1em;\n`\n\nconst Thumbnail = styled.img`\n  width: 347.5px;\n  height: 195.47px;\n`\n\nconst ChannelDetail = styled.div`\n  padding: 0px 5px;\n`\n\nconst Title = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;  width: 347px;\n\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 16.8px;\n  color: rgb(25, 23, 28);\n  font-family:\"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  margin-top: 5px;\n  margin-bottom: 2px;\n`\n\nconst Details = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;  width: 347px;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 18px;\n  color: rgb(50, 47, 55);\n  font-family:\"Helvetica Neue\", Helvetica, Arial, sans-serif;\n`\n\nconst ChannelItemStyle = styled.div`\n  float: left;\n  padding: 10px;\n`\n\nexport default ChannelItem;\n","import * as React from 'react';\nimport ChannelItem from './ChannelItem'\nimport Channel from '../Channel'\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\ntype Props = {\n    channels: Channel[],\n}\n\nconst ChannelList = (props: Props) => {\n    const {\n        channels,\n    } = props;\n\n    return (\n        <ChannelStyle>\n            {\n                channels.filter(channel => channel.type === 'FLV').map((item, index) => {\n                    return <ChannelItem key={index} channel={item}/>\n                })\n            }\n        </ChannelStyle>\n    );\n};\n\nconst ChannelStyle = styled.div`\n  /* padding: 50px; */\n`\n\nexport default ChannelList;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport Channel from '../Channel';\nimport { useState, useEffect } from 'react';\n\ndeclare var flvjs: any;\n\ntype Props = {\n    streamId: String,\n    channels: Channel[],\n}\n\nconst ChannelPlayer = (props: Props) => {\n    const {\n        streamId,\n        channels,\n    } = props;\n\n    const channel: any = channels.find((channel) => channel.streamId === streamId) || {\n        name: 'チャンネルが見つかりません',\n        streamId: '',\n        tip: '',\n        contactUrl: '',\n        genre: '',\n        details: '',\n        listenerCount: 0,\n        relayCount: 0,\n        bitrate: 0,\n        type: 'FLV',\n    }\n\n    function unescapeHTML(html: string) {\n    var escapeEl = document.createElement('textarea');\n    escapeEl.innerHTML = html;\n    return escapeEl.textContent;\n    }\n\n    const channelDetail = (channel: Channel) => {\n        let text = '';\n        const details = unescapeHTML(channel.details.replace(/ - .*/, '')) || ''\n\n        if (channel.genre.length) {\n            text = channel.genre\n            if (details.length) {\n                text += ' - '\n            }\n        }\n        if (details.length) {\n            text += details\n        }\n        return text;\n    }\n\n    const videoElementId = `videoElement-${channel.streamId}`;\n    const thumnbailElementId = `thumnbailElement-${channel.streamId}`;\n    let flvPlayer: any = null;\n    let hiddenPlayer = true;\n\n    window.scrollTo(0, 0);\n\n    useEffect(() => {\n        let videoElement:any = document.getElementById(videoElementId);\n        videoElement.hidden = false;\n        console.log('channel.streamId:' + channel.streamId)\n        if (channel.streamId.length > 0) {\n            console.log('aaa')\n            const url = `http://peca.live:7144/stream/${channel.streamId}.flv?tip=${channel.tip}`;\n            flvPlayer = flvjs.createPlayer({\n                type: 'flv',\n                isLive: true,\n                url: url\n            });\n            flvPlayer.attachMediaElement(videoElement);\n            flvPlayer.load();\n            flvPlayer.play();\n            hiddenPlayer = false;\n        }\n    })\n\n    return (\n        <ChannelItemStyle>\n            <a>\n                <div>\n                    <video id={videoElementId} controls width=\"100%\"></video>\n                </div>\n                <ChannelDetail>\n                    <Title>\n                        {channelDetail(channel)}\n                    </Title>\n                    <Details>\n                        {channel.name}\n                    </Details>\n                </ChannelDetail>\n            </a>\n        </ChannelItemStyle>\n    );\n};\n\nconst StyledButton = styled.button`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: palevioletred;\n  margin: 0 1em;\n  padding: 0.25em 1em;\n`\n\nconst Thumbnail = styled.img`\n  width: 347.5px;\n  height: 195.47px;\n`\n\nconst ChannelDetail = styled.div`\n  padding: 0px 5px;\n`\n\nconst Title = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;  width: 347px;\n\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 16.8px;\n  color: rgb(25, 23, 28);\n  font-family:\"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  margin-top: 5px;\n  margin-bottom: 2px;\n`\n\nconst Details = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;  width: 347px;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 18px;\n  color: rgb(50, 47, 55);\n  font-family:\"Helvetica Neue\", Helvetica, Arial, sans-serif;\n`\n\nconst ChannelItemStyle = styled.div`\n  float: left;\n  padding: 10px;\n`\n\nexport default ChannelPlayer;\n","import React from 'react';\nimport ChannelList from './components/ChannelList';\nimport ChannelPlayer from './components/ChannelPlayer';\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport styled from 'styled-components';\nimport Channel from './Channel'\nimport { useState, useEffect } from 'react';\n\nconst ChannelStyle = styled.div`\n  padding: 40px;\n`\n\nconst Logo = styled.img`\n  height: 50px;\n  width: 180px;\n  padding-left: 7px;\n`\n\nconst App = () => {\n  const [channels, setChannels] = useState<Channel[]>([]);\n\n  useEffect(() => {\n      const fetchData = async () => {\n          const res = await fetch('https://peca-live.herokuapp.com/api/v1/channels', {credentials: 'same-origin'});\n          const text = await res.text();\n          const lines = text.split('\\n');\n\n          const channels: any = lines.map(line => {\n              const elements = line.split('<>');\n              const type = elements[9];\n              if (type === null) { return null; }\n\n              return {\n                  name: elements[0],          // A.ch\n                  streamId: elements[1],      // 0C1A6C6959CEB2A8BF9598BC9185FF32\n                  tip: elements[2],           // 14.13.42.64:5184\n                  contactUrl: elements[3],    // http://jbbs.shitaraba.net/bbs/read.cgi/game/52685/1567349533/\n                  genre: elements[4],         // PS4\n                  details: elements[5],       // モンスターハンターワールド：アイスボーン MHWIB - &lt;Open&gt;\n                  listenerCount: elements[6], // -1\n                  relayCount: elements[7],    // -1\n                  bitrate: elements[8],       // 1500\n                  type: type,                 // FLV\n              } }\n          );\n          setChannels(channels);\n      };\n\n      fetchData();\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <ChannelStyle>\n        <Link to='/'>\n          <Logo src=\"/pecalive.png\" />\n        </Link>\n        <div>\n          <Route exact path='/' render={(props) => <ChannelList channels={channels} />} />\n          <Route path='/channels/:streamId' render={\n              (props) => { return <ChannelPlayer streamId={props.match.params.streamId} channels={channels}/>}\n            }\n          />\n        </div>\n      </ChannelStyle>\n\n    </BrowserRouter>\n  )\n}\n\n{/* <ChannelPlayer channel={channels.find((channel) => channel.streamId === props.match.params.id)} /> */}\n\n\nexport default App;\n","import { Reducer } from \"redux\";\n\nexport enum CounterActionType {\n  ADD = \"COUNTER/ADD\",\n  DECREMENT = \"COUNTER/DECREMENT\",\n  INCREMENT = \"COUNTER/INCREMENT\"\n}\nexport interface CounterAction {\n  type: CounterActionType;\n  amount?: number;\n}\nexport const add = (amount: number): CounterAction => ({\n  amount,\n  type: CounterActionType.ADD\n});\nexport const decrement = (): CounterAction => ({\n  type: CounterActionType.DECREMENT\n});\nexport const increment = (): CounterAction => ({\n  type: CounterActionType.INCREMENT\n});\n\n\nexport interface CounterState {\n  count: number;\n}\nexport const initialState: CounterState = { count: 0 };\nconst counterReducer: Reducer<CounterState, CounterAction> = (\n  state: CounterState = initialState,\n  action: CounterAction\n): CounterState => {\n  switch (action.type) {\n    case CounterActionType.ADD:\n      return {\n        ...state,\n        count: state.count + (action.amount || 0)\n      };\n    case CounterActionType.DECREMENT:\n      return {\n        ...state,\n        count: state.count - 1\n      };\n    case CounterActionType.INCREMENT:\n      return {\n        ...state,\n        count: state.count + 1\n      };\n    default: {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const _: never = action.type;\n      return state;\n    }\n  }\n};\nexport default counterReducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport App from \"./App\";\n\nimport counterReducer, { initialState } from './modules/Counter'\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\nconst store = createStore(counterReducer, initialState);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\") as HTMLElement\n);\nserviceWorker.unregister();\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n// import { Provider } from 'react-redux'\n// import { createStore } from 'redux'\n\n// const initialState = {\n//     fuga: 1\n// }\n\n// export default function reducer(state = initialState, action: any) {\n//     switch(action.type) {\n//         case 'INCREMENT':\n//         default:\n//         return state\n//     }\n// }\n\n// const store = createStore(reducer)\n\n// ReactDOM.render(\n//     <Provider store={store}>\n//         <App />\n//     </Provider>,\n//     document.getElementById('root')\n// )\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}